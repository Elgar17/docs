(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{362:function(t,a,l){"use strict";l.r(a);var r=l(42),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,l=t._self._c||a;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"目录"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),l("p",[t._v("这里汇总了一些题目，是前端必学的数据结构和必刷的 LeetCode 算法题。")]),t._v(" "),l("h2",{attrs:{id:"数据结构"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),l("p",[t._v("数据结构是算法的基石，不理解数据结构，很难学习算法。")]),t._v(" "),l("ol",[l("li",[l("RouterLink",{attrs:{to:"/alg/d-stack.html"}},[t._v("Stack(栈结构)")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/alg/d-queue.html"}},[t._v("Queue(队列结构)")])],1)]),t._v(" "),l("h2",{attrs:{id:"算法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),l("p",[t._v("这些都是我在面试过程中遇到的，自己在学习前端过程刷的题，题目有顺序，由简单到深入。")]),t._v(" "),l("p",[t._v("（1）排序")]),t._v(" "),l("ol",[l("li",[l("RouterLink",{attrs:{to:"/alg/bubblesot.html"}},[t._v("冒泡排序（简单）")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/alg/quick-sort.html"}},[t._v("快速排序（中等）")])],1)]),t._v(" "),l("p",[t._v("（2）双指针")]),t._v(" "),l("ol",[l("li",[l("RouterLink",{attrs:{to:"/alg/633.judge-square-sum.html"}},[t._v("平方数之和（简单）")])],1)]),t._v(" "),l("p",[t._v("（3）搜索")]),t._v(" "),l("ol",[l("li",[l("RouterLink",{attrs:{to:"/alg/binary-search.html"}},[t._v("二分法查找（中等）")])],1)]),t._v(" "),l("p",[t._v("（4）动态规划")]),t._v(" "),l("ol",[l("li",[l("RouterLink",{attrs:{to:"/alg/num-ways.html"}},[t._v("青蛙跳台阶，斐波那契数列（简单）")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/alg/coin-change.html"}},[t._v("最少硬币组合（中等）")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/alg/max-sub-nums.html"}},[t._v("连续子数组的最大和（中等）")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/alg/longest-palindrome.html"}},[t._v("最长回文子串（中等）")])],1)]),t._v(" "),l("p",[t._v("（5）其他")]),t._v(" "),l("ol",[l("li",[l("RouterLink",{attrs:{to:"/alg/parsing-url.html"}},[t._v("解析 URL（简单）")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/alg/conversion.html"}},[t._v("对象结构转换成 Dom 树（简单）")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/alg/k-largest-el.html"}},[t._v("数组中第k个最大元素（简单）")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/alg/get-kth-from-end.html"}},[t._v("倒数第 n 个节点")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/alg/chunk.html"}},[t._v("拆分特定大小的数组（中等）")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/alg/compare-version.html"}},[t._v("版本号比较（中等）")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/alg/version-sort.html"}},[t._v("版本号排序（中等）")])],1)]),t._v(" "),l("h2",{attrs:{id:"参考链接"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),l("ul",[l("li",[l("a",{attrs:{href:"leetcode.com"}},[t._v("leetcode.com")]),t._v("，by leetcode")])]),t._v(" "),l("comment-comment")],1)}),[],!1,null,null,null);a.default=e.exports}}]);