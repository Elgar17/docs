(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{469:function(t,s,e){"use strict";e.r(s);var a=e(42),_=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"http-options-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-options-方法"}},[t._v("#")]),t._v(" http options 方法")]),t._v(" "),e("h2",{attrs:{id:"_1、概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、概述"}},[t._v("#")]),t._v(" 1、概述")]),t._v(" "),e("p",[e("code",[t._v("http")]),t._v(" 中的 "),e("code",[t._v("options")]),t._v(" 方法也跟普通的 "),e("code",[t._v("get")]),t._v(" 等请求一样，有两个作用，一个是检测服务器支持的请求，第二个是 "),e("code",[t._v("CORS")]),t._v(" 中的预检请求。")]),t._v(" "),e("p",[t._v("下面我们分别介绍。")]),t._v(" "),e("h2",{attrs:{id:"_2、检测服务器所支持的请求方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、检测服务器所支持的请求方法"}},[t._v("#")]),t._v(" 2、检测服务器所支持的请求方法")]),t._v(" "),e("p",[t._v("我们可以像服务器发送一个 "),e("code",[t._v("options")]),t._v(" 请求，在返回的请求头 "),e("code",[t._v("Allow")]),t._v(" 字段中，我们可以获取，服务器支持哪些方法。\n这是一个例子，说明服务器支持一下方法。")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Allow: OPTIONS,GET,HEAD,POST\n")])])]),e("h2",{attrs:{id:"_3、cors-中的预检请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、cors-中的预检请求"}},[t._v("#")]),t._v(" 3、"),e("code",[t._v("CORS")]),t._v(" 中的预检请求")]),t._v(" "),e("p",[e("code",[t._v("CORS")]),t._v(" 是用于跨域的技术，我们使用 "),e("code",[t._v("options")]),t._v(" 方法来检测该接口能否跨域请求。")]),t._v(" "),e("comment-comment")],1)}),[],!1,null,null,null);s.default=_.exports}}]);